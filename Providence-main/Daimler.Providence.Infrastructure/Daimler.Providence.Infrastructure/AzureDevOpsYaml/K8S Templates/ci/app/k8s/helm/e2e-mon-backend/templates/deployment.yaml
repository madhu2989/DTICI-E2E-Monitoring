apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backendAppName }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.backendAppName }}
      component: {{ .Values.backendComponentName }}
{{ if .Values.replicas.min }}
  replicas: {{ .Values.replicas.min }}
{{ end }}
  minReadySeconds: 20
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ .Values.backendAppName }}
        component: {{ .Values.backendComponentName }}
        aadpodidbinding: {{ .Values.podIdentity.bindingName }}
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        rollme: {{ randAlphaNum 5 | quote }} # forces helm deployment even though nothing changed

    spec:
      #serviceAccountName: "#{vars.E2E_MONITORING_SERVICE_ACC_NAME}#"
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault

      containers:
        - name: {{ .Values.backendAppName }}
          image: {{ .Values.backendImage }}  
          env:
          {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
          {{- end }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
                drop: ['ALL']
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - name: config-volume
              mountPath: /app/appsettings.json
              subPath: appsettings.json
          ports:
            - name: http
              containerPort: {{ .Values.containerPort.backendPort }}
              protocol: TCP
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          #     scheme: HTTP
          #   initialDelaySeconds: 240
          #   periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 15
      volumes:
        - emptyDir: {}
          name: tmp
        - name: config-volume
          configMap:
            name: backendapp-config